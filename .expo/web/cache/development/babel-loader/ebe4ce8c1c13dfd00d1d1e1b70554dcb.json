{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Master\\\\app\\\\app\\\\components\\\\NoteDetail.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState } from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport colors from \"../misc/colors\";\nimport RoundIconBtn from \"./RoundIconBtn\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNotes } from \"../contexts/NoteProvider\";\nimport NoteInputModal from \"./NoteInputModal\";\n\nvar formatDate = function formatDate(ms) {\n  var date = new Date(ms);\n  var day = date.getDate();\n  var month = date.getMonth() + 1;\n  var year = date.getFullYear();\n  var hrs = date.getHours();\n  var min = date.getMinutes();\n  var sec = date.getSeconds();\n  return day + \"/\" + month + \"/\" + year + \" - \" + hrs + \":\" + min + \":\" + sec;\n};\n\nvar NoteDetail = function NoteDetail(props) {\n  var _useState = useState(props.route.params.note),\n      _useState2 = _slicedToArray(_useState, 2),\n      note = _useState2[0],\n      setNote = _useState2[1];\n\n  var headerHeight = useHeaderHeight();\n\n  var _useNotes = useNotes(),\n      setNotes = _useNotes.setNotes;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showModal = _useState4[0],\n      setShowModal = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isEdit = _useState6[0],\n      setIsEdit = _useState6[1];\n\n  var deleteNote = function deleteNote() {\n    var result, notes, newNotes;\n    return _regeneratorRuntime.async(function deleteNote$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notes'));\n\n          case 2:\n            result = _context.sent;\n            notes = [];\n            if (result !== null) notes = JSON.parse(result);\n            newNotes = notes.filter(function (n) {\n              return n.id !== note.id;\n            });\n            setNotes(newNotes);\n            _context.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notes', JSON.stringify(newNotes)));\n\n          case 9:\n            props.navigation.goBack();\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var displayDeleteAlert = function displayDeleteAlert() {\n    Alert.alert('Are You Sure!', 'This action will delete your note permanently!', [{\n      text: 'Delete',\n      onPress: deleteNote\n    }, {\n      text: 'No Thanks',\n      onPress: function onPress() {\n        return console.log('no thanks');\n      }\n    }], {\n      cancelable: true\n    });\n  };\n\n  var handleUpdate = function handleUpdate(title, desc, time) {\n    var result, notes, newNotes;\n    return _regeneratorRuntime.async(function handleUpdate$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notes'));\n\n          case 2:\n            result = _context2.sent;\n            notes = [];\n            if (result !== null) notes = JSON.parse(result);\n            newNotes = notes.filter(function (n) {\n              if (n.id === note.id) {\n                n.title = title;\n                n.desc = desc;\n                n.isUpdated = true;\n                n.time = time;\n                setNote(n);\n              }\n\n              return n;\n            });\n            setNotes(newNotes);\n            _context2.next = 9;\n            return _regeneratorRuntime.awrap(AsyncStorage.setItem('notes', JSON.stringify(newNotes)));\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var handleOnClose = function handleOnClose() {\n    return setShowModal(false);\n  };\n\n  var openEditModal = function openEditModal() {\n    setIsEdit(true);\n    setShowModal(true);\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(ScrollView, {\n    contentContainerStyle: [styles.container, {\n      paddingTop: headerHeight\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.time,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }\n  }, note.isUpdated ? \"Updated At \" + formatDate(note.time) : \"Created At \" + formatDate(note.time)), React.createElement(Text, {\n    style: styles.title,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, note.title), React.createElement(Text, {\n    style: styles.desc,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, note.desc)), React.createElement(View, {\n    style: styles.btnContainer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, React.createElement(RoundIconBtn, {\n    antIconName: \"delete\",\n    style: {\n      backgroundColor: colors.ERROR,\n      marginBottom: 15\n    },\n    onPress: displayDeleteAlert,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }), React.createElement(RoundIconBtn, {\n    antIconName: \"edit\",\n    onPress: openEditModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  })), React.createElement(NoteInputModal, {\n    isEdit: isEdit,\n    note: note,\n    onClose: handleOnClose,\n    onSubmit: handleUpdate,\n    visible: showModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    paddingHorizontal: 15\n  },\n  title: {\n    fontSize: 30,\n    color: colors.PRIMARY,\n    fontWeight: 'bold'\n  },\n  desc: {\n    fontSize: 20,\n    opacity: 0.6\n  },\n  time: {\n    textAlign: 'right',\n    fontSize: 12,\n    opacity: 0.5\n  },\n  btnContainer: {\n    position: 'absolute',\n    right: 15,\n    bottom: 50\n  }\n});\nexport default NoteDetail;","map":{"version":3,"names":["React","useState","useHeaderHeight","colors","RoundIconBtn","AsyncStorage","useNotes","NoteInputModal","formatDate","ms","date","Date","day","getDate","month","getMonth","year","getFullYear","hrs","getHours","min","getMinutes","sec","getSeconds","NoteDetail","props","route","params","note","setNote","headerHeight","setNotes","showModal","setShowModal","isEdit","setIsEdit","deleteNote","getItem","result","notes","JSON","parse","newNotes","filter","n","id","setItem","stringify","navigation","goBack","displayDeleteAlert","Alert","alert","text","onPress","console","log","cancelable","handleUpdate","title","desc","time","isUpdated","handleOnClose","openEditModal","styles","container","paddingTop","btnContainer","backgroundColor","ERROR","marginBottom","StyleSheet","create","paddingHorizontal","fontSize","color","PRIMARY","fontWeight","opacity","textAlign","position","right","bottom"],"sources":["C:/Users/Master/app/app/components/NoteDetail.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ScrollView, StyleSheet, Text, View, Alert } from 'react-native';\nimport { useHeaderHeight } from '@react-navigation/stack';\nimport colors from '../misc/colors';\nimport RoundIconBtn from './RoundIconBtn';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { useNotes } from '../contexts/NoteProvider';\nimport NoteInputModal from './NoteInputModal';\n\nconst formatDate = ms => {\n  const date = new Date(ms);\n  const day = date.getDate();\n  const month = date.getMonth() + 1;\n  const year = date.getFullYear();\n  const hrs = date.getHours();\n  const min = date.getMinutes();\n  const sec = date.getSeconds();\n\n  return `${day}/${month}/${year} - ${hrs}:${min}:${sec}`;\n};\n\nconst NoteDetail = props => {\n  const [note, setNote] = useState(props.route.params.note);\n  const headerHeight = useHeaderHeight();\n  const { setNotes } = useNotes();\n  const [showModal, setShowModal] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  const deleteNote = async () => {\n    const result = await AsyncStorage.getItem('notes');\n    let notes = [];\n    if (result !== null) notes = JSON.parse(result);\n\n    const newNotes = notes.filter(n => n.id !== note.id);\n    setNotes(newNotes);\n    await AsyncStorage.setItem('notes', JSON.stringify(newNotes));\n    props.navigation.goBack();\n  };\n\n  const displayDeleteAlert = () => {\n    Alert.alert(\n      'Are You Sure!',\n      'This action will delete your note permanently!',\n      [\n        {\n          text: 'Delete',\n          onPress: deleteNote,\n        },\n        {\n          text: 'No Thanks',\n          onPress: () => console.log('no thanks'),\n        },\n      ],\n      {\n        cancelable: true,\n      }\n    );\n  };\n\n  const handleUpdate = async (title, desc, time) => {\n    const result = await AsyncStorage.getItem('notes');\n    let notes = [];\n    if (result !== null) notes = JSON.parse(result);\n\n    const newNotes = notes.filter(n => {\n      if (n.id === note.id) {\n        n.title = title;\n        n.desc = desc;\n        n.isUpdated = true;\n        n.time = time;\n\n        setNote(n);\n      }\n      return n;\n    });\n\n    setNotes(newNotes);\n    await AsyncStorage.setItem('notes', JSON.stringify(newNotes));\n  };\n  const handleOnClose = () => setShowModal(false);\n\n  const openEditModal = () => {\n    setIsEdit(true);\n    setShowModal(true);\n  };\n\n  return (\n    <>\n      <ScrollView\n        contentContainerStyle={[styles.container, { paddingTop: headerHeight }]}\n      >\n        <Text style={styles.time}>\n          {note.isUpdated\n            ? `Updated At ${formatDate(note.time)}`\n            : `Created At ${formatDate(note.time)}`}\n        </Text>\n        <Text style={styles.title}>{note.title}</Text>\n        <Text style={styles.desc}>{note.desc}</Text>\n      </ScrollView>\n      <View style={styles.btnContainer}>\n        <RoundIconBtn\n          antIconName='delete'\n          style={{ backgroundColor: colors.ERROR, marginBottom: 15 }}\n          onPress={displayDeleteAlert}\n        />\n        <RoundIconBtn antIconName='edit' onPress={openEditModal} />\n      </View>\n      <NoteInputModal\n        isEdit={isEdit}\n        note={note}\n        onClose={handleOnClose}\n        onSubmit={handleUpdate}\n        visible={showModal}\n      />\n    </>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    // flex: 1,\n    paddingHorizontal: 15,\n  },\n  title: {\n    fontSize: 30,\n    color: colors.PRIMARY,\n    fontWeight: 'bold',\n  },\n  desc: {\n    fontSize: 20,\n    opacity: 0.6,\n  },\n  time: {\n    textAlign: 'right',\n    fontSize: 12,\n    opacity: 0.5,\n  },\n  btnContainer: {\n    position: 'absolute',\n    right: 15,\n    bottom: 50,\n  },\n});\n\nexport default NoteDetail;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}