{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\Master\\\\app\\\\app\\\\contexts\\\\NoteProvider.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nvar NoteContext = createContext();\n\nvar NoteProvider = function NoteProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      notes = _useState2[0],\n      setNotes = _useState2[1];\n\n  var findNotes = function findNotes() {\n    var result;\n    return _regeneratorRuntime.async(function findNotes$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('notes'));\n\n          case 2:\n            result = _context.sent;\n            if (result !== null) setNotes(JSON.parse(result));\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    findNotes();\n  }, []);\n  return React.createElement(NoteContext.Provider, {\n    value: {\n      notes: notes,\n      setNotes: setNotes,\n      findNotes: findNotes\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, children);\n};\n\nexport var useNotes = function useNotes() {\n  return useContext(NoteContext);\n};\nexport default NoteProvider;","map":{"version":3,"names":["AsyncStorage","React","createContext","useContext","useEffect","useState","NoteContext","NoteProvider","children","notes","setNotes","findNotes","getItem","result","JSON","parse","useNotes"],"sources":["C:/Users/Master/app/app/contexts/NoteProvider.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst NoteContext = createContext();\nconst NoteProvider = ({ children }) => {\n  const [notes, setNotes] = useState([]);\n\n  const findNotes = async () => {\n    const result = await AsyncStorage.getItem('notes');\n    if (result !== null) setNotes(JSON.parse(result));\n  };\n\n  useEffect(() => {\n    findNotes();\n  }, []);\n\n  return (\n    <NoteContext.Provider value={{ notes, setNotes, findNotes }}>\n      {children}\n    </NoteContext.Provider>\n  );\n};\n\nexport const useNotes = () => useContext(NoteContext);\n\nexport default NoteProvider;\n"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,OAAOC,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,EAA2CC,SAA3C,EAAsDC,QAAtD,QAAsE,OAAtE;AAEA,IAAMC,WAAW,GAAGJ,aAAa,EAAjC;;AACA,IAAMK,YAAY,GAAG,SAAfA,YAAe,OAAkB;EAAA,IAAfC,QAAe,QAAfA,QAAe;;EAAA,gBACXH,QAAQ,CAAC,EAAD,CADG;EAAA;EAAA,IAC9BI,KAD8B;EAAA,IACvBC,QADuB;;EAGrC,IAAMC,SAAS,GAAG,SAAZA,SAAY;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACKX,YAAY,CAACY,OAAb,CAAqB,OAArB,CADL;;UAAA;YACVC,MADU;YAEhB,IAAIA,MAAM,KAAK,IAAf,EAAqBH,QAAQ,CAACI,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAD,CAAR;;UAFL;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAlB;;EAKAT,SAAS,CAAC,YAAM;IACdO,SAAS;EACV,CAFQ,EAEN,EAFM,CAAT;EAIA,OACE,oBAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAE;MAAEF,KAAK,EAALA,KAAF;MAASC,QAAQ,EAARA,QAAT;MAAmBC,SAAS,EAATA;IAAnB,CAA7B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGH,QADH,CADF;AAKD,CAjBD;;AAmBA,OAAO,IAAMQ,QAAQ,GAAG,SAAXA,QAAW;EAAA,OAAMb,UAAU,CAACG,WAAD,CAAhB;AAAA,CAAjB;AAEP,eAAeC,YAAf"},"metadata":{},"sourceType":"module"}