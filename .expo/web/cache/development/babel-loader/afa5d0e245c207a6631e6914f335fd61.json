{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Master\\\\app\\\\App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\nimport Intro from \"./app/screens/Intro\";\nimport NoteScreen from \"./app/screens/NoteScreen\";\nimport NoteDetail from \"./app/components/NoteDetail\";\nimport NoteProvider from \"./app/contexts/NoteProvider\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAppFirstTimeOpen = _useState4[0],\n      setIsAppFirstTimeOpen = _useState4[1];\n\n  var findUser = function findUser() {\n    var result;\n    return _regeneratorRuntime.async(function findUser$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(AsyncStorage.getItem('user'));\n\n          case 2:\n            result = _context.sent;\n\n            if (!(result === null)) {\n              _context.next = 5;\n              break;\n            }\n\n            return _context.abrupt(\"return\", setIsAppFirstTimeOpen(true));\n\n          case 5:\n            setUser(JSON.parse(result));\n            setIsAppFirstTimeOpen(false);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  useEffect(function () {\n    findUser();\n  }, []);\n\n  var renderNoteScreen = function renderNoteScreen(props) {\n    return React.createElement(NoteScreen, _extends({}, props, {\n      user: user,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 37\n      }\n    }));\n  };\n\n  if (isAppFirstTimeOpen) return React.createElement(Intro, {\n    onFinish: findUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 34\n    }\n  });\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(NoteProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Navigator, {\n    screenOptions: {\n      headerTitle: '',\n      headerTransparent: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, React.createElement(Stack.Screen, {\n    component: renderNoteScreen,\n    name: \"NoteScreen\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), React.createElement(Stack.Screen, {\n    component: NoteDetail,\n    name: \"NoteDetail\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }))));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"names":["AsyncStorage","StatusBar","React","useEffect","useState","createStackNavigator","NavigationContainer","Intro","NoteScreen","NoteDetail","NoteProvider","Stack","App","user","setUser","isAppFirstTimeOpen","setIsAppFirstTimeOpen","findUser","getItem","result","JSON","parse","renderNoteScreen","props","headerTitle","headerTransparent","styles","StyleSheet","create","container","flex","backgroundColor","alignItems","justifyContent"],"sources":["C:/Users/Master/app/App.js"],"sourcesContent":["import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useState } from 'react';\nimport { StyleSheet, Text, View } from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { NavigationContainer } from '@react-navigation/native';\n\nimport Intro from './app/screens/Intro';\nimport NoteScreen from './app/screens/NoteScreen';\nimport NoteDetail from './app/components/NoteDetail';\nimport NoteProvider from './app/contexts/NoteProvider';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [user, setUser] = useState({});\n  const [isAppFirstTimeOpen, setIsAppFirstTimeOpen] = useState(false);\n  const findUser = async () => {\n    const result = await AsyncStorage.getItem('user');\n\n    if (result === null) return setIsAppFirstTimeOpen(true);\n\n    setUser(JSON.parse(result));\n    setIsAppFirstTimeOpen(false);\n  };\n\n  useEffect(() => {\n    findUser();\n  }, []);\n\n  const renderNoteScreen = props => <NoteScreen {...props} user={user} />;\n\n  if (isAppFirstTimeOpen) return <Intro onFinish={findUser} />;\n  return (\n    <NavigationContainer>\n      <NoteProvider>\n        <Stack.Navigator\n          screenOptions={{ headerTitle: '', headerTransparent: true }}\n        >\n          <Stack.Screen component={renderNoteScreen} name='NoteScreen' />\n          <Stack.Screen component={NoteDetail} name='NoteDetail' />\n        </Stack.Navigator>\n      </NoteProvider>\n    </NavigationContainer>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"],"mappings":";;;;AAAA,OAAOA,YAAP,MAAyB,2CAAzB;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;AAEA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,KAAP;AACA,OAAOC,UAAP;AACA,OAAOC,UAAP;AACA,OAAOC,YAAP;AAEA,IAAMC,KAAK,GAAGN,oBAAoB,EAAlC;AAEA,eAAe,SAASO,GAAT,GAAe;EAAA;;EAAA,gBACJR,QAAQ,CAAC,EAAD,CADJ;EAAA;EAAA,IACrBS,IADqB;EAAA,IACfC,OADe;;EAAA,iBAEwBV,QAAQ,CAAC,KAAD,CAFhC;EAAA;EAAA,IAErBW,kBAFqB;EAAA,IAEDC,qBAFC;;EAG5B,IAAMC,QAAQ,GAAG,SAAXA,QAAW;IAAA;IAAA;MAAA;QAAA;UAAA;YAAA;YAAA,iCACMjB,YAAY,CAACkB,OAAb,CAAqB,MAArB,CADN;;UAAA;YACTC,MADS;;YAAA,MAGXA,MAAM,KAAK,IAHA;cAAA;cAAA;YAAA;;YAAA,iCAGaH,qBAAqB,CAAC,IAAD,CAHlC;;UAAA;YAKfF,OAAO,CAACM,IAAI,CAACC,KAAL,CAAWF,MAAX,CAAD,CAAP;YACAH,qBAAqB,CAAC,KAAD,CAArB;;UANe;UAAA;YAAA;QAAA;MAAA;IAAA;EAAA,CAAjB;;EASAb,SAAS,CAAC,YAAM;IACdc,QAAQ;EACT,CAFQ,EAEN,EAFM,CAAT;;EAIA,IAAMK,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAC,KAAK;IAAA,OAAI,oBAAC,UAAD,eAAgBA,KAAhB;MAAuB,IAAI,EAAEV,IAA7B;MAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAAA,GAAJ;EAAA,CAA9B;;EAEA,IAAIE,kBAAJ,EAAwB,OAAO,oBAAC,KAAD;IAAO,QAAQ,EAAEE,QAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAP;EACxB,OACE,oBAAC,mBAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,oBAAC,YAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACE,oBAAC,KAAD,CAAO,SAAP;IACE,aAAa,EAAE;MAAEO,WAAW,EAAE,EAAf;MAAmBC,iBAAiB,EAAE;IAAtC,CADjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GAGE,oBAAC,KAAD,CAAO,MAAP;IAAc,SAAS,EAAEH,gBAAzB;IAA2C,IAAI,EAAC,YAAhD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAHF,EAIE,oBAAC,KAAD,CAAO,MAAP;IAAc,SAAS,EAAEb,UAAzB;IAAqC,IAAI,EAAC,YAA1C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAJF,CADF,CADF,CADF;AAYD;AAED,IAAMiB,MAAM,GAAGC,UAAU,CAACC,MAAX,CAAkB;EAC/BC,SAAS,EAAE;IACTC,IAAI,EAAE,CADG;IAETC,eAAe,EAAE,MAFR;IAGTC,UAAU,EAAE,QAHH;IAITC,cAAc,EAAE;EAJP;AADoB,CAAlB,CAAf"},"metadata":{},"sourceType":"module"}